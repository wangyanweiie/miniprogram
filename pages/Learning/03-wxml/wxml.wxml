<!-- 
  1.mustache语法: {{}}
  2.逻辑判断: wx:if/ wx:elif/ wx:else
  3.block标签: 
    * 不是组件,用于包裹一些组件,不会被渲染出来,只接收控制属性;
    * 可以将需要遍历或者进行逻辑判断的组件包裹起来
    * 可以提高代码的可读性,不影响性能;

  4.列表渲染: wx:for="{{属性名}}"
    * 可遍历数组/字符串/数字(index与item)
    * wx:for-item:"变量名"   可在嵌套时区分item的名字提高可读性
    * wx:key="唯一标识"      可以提高性能(高效更新虚拟DOM 同vue)

  5.模板语法: template
    * 作用: 提高代码复用
    * 模板中包裹的内容在没有使用前是不会进行任何渲染的
    * 可以直接抽离成单独的文件,进行引入方便复用;(不可以递归导入)
      <import src="定义的模板文件的路径"/>
      <include src="定义的模板文件的路径"/>
    * 语法: 
      ①普通使用: 
        <template name="标识名">...</template>   
        <template is="标识名">
      ②传值使用:
        <template name="标识名">
          <text>{{变量名key1}}</text>
          <text>{{变量名key2}}\n</text>
        </template>   
        <template is="标识名" data="key1:val1,key2:val2">

  6.
 -->

 <!-- block -->
 <block>
  <view>请输入用户姓名:</view>
  <input/>
</block>
<!-- wx:for -->
 <view wx:for="{{movies}}"  wx:key="{{index}}">
  {{index}}: 电影{{item.name}} --{{item.star}}
</view>
<!-- templte -->
<template name="content1">
  <text>王言伟</text>
  <text>740484522\n</text>
</template>
<template name="content2">
  <text>{{name}}</text>
  <text>{{QQ}}\n</text>
</template>

<template is="content1"/>
<template is="content1"/>
<template is="content2" data="{{name:'邵思彤',QQ:1248406277}}"/>
<template is="content2" data="{{name:'王若兮',QQ:1248406277}}"/>

