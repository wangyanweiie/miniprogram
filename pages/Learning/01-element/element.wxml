<!--
  Text组件: 行内元素,类似于span标签展示文本;
    * \n           行内元素件换行
    * user-select  设置在真机上文本是否可以选中;
    * space        设置文本中空格的大小
    * decode       是否解码文本
    ......
-->
<text>当前计数 count: {{count}}\n</text>
<text user-select>Hello {{name}}\n</text>
<text space="nbsp">Hello {{name}}\n</text>
<text decode> Hello &gt; Hi\n</text>

<!--
  Button组件: 默认显示大图标,块级元素;
    * size         设置按钮的大小,且mini行内块;
    * type         设置按钮的类型颜色
    * plain        设置按钮的镂空效果
    * disabled     设置按钮禁止点击
    * loading      设置按钮为加载中的状态
    * hover-class  可以绑定class设置按钮点击后的颜色变化
    ---------
    * bindtap      可以绑定响应函数监听按钮的点击事件
    * open-type="getUserInfo"   设置按钮点击获取用户信息
      bindgetuserinfo="响应事件"
    ......
-->
<button size="mini">点击</button>
<button size="mini" type="warn">点击</button>
<button size="mini" plain>点击</button>
<button size="mini" loading>点击</button>
<button size="mini" hover-class="change">点击</button>
<button size="mini" bindtap="addCount">count++</button>
<button size="mini" open-type="getUserInfo" bindgetuserinfo="getUserBtn">点击获取用户信息</button>

<!--
  view视图组件: 块级元素,类似于div常作为容器;
    * hover-class             可以绑定class设置点击后的样式变化
    * hover-stop-propagation  设置是否阻止点击事件冒泡
    ......
-->
<view class="box" hover-class="change">哈哈</view>
<view class="wrap" hover-class="wrapChange">
  <view class="inner" 
        hover-class="innerChange" 
        hover-stop-propagation>
  </view>
</view>

<!--
  image组件: 内块元素,可以写成单标签,默认有固定大小占据页面位置 (320*240)
    * src="路径"              本地图片/远程图片
    * lazyload                设置图片懒加载 (前三屏依旧是一次性加载)
    * mode                    设置图片的裁剪模式与缩放模式,默认scaleToFill;
    * show-menu-by-longpress  设置长按图片弹出识别小程序码
      ---------
    * bindload    监听图片加载完成事件
    * binderror   监听图片发生错误事件
    ......
-->
<image src="https://img0.baidu.com/it/u=2072187263,1143403827&fm=26&fmt=auto" 
       bindload="imgLoad"
       lazy-load
       show-menu-by-longpress
       mode="aspectFit"/>
<button size="mini" bindtap="getphoto">打开相册图片</button>

<!--
  input组件: 可以写成单标签,默认透明色;
    * type          设置弹出的键盘类型(真机可见)
    * placeholder   阴影提示文字
    * password      设置密码框输入内容不可见
    * disabled      设置输入框禁用
    * confirm-type  设置弹出键盘右下角完成的文字,仅在type="text"时有效;
    -----------
    * bindinput     当输入框输入内容时触发
    * bindfocus     当输入框过去焦点时触发
    * bindblur      当输入框失去焦点时触发
    * bindconfirm   当输入框输入点击完成时触发
  ......
-->
<input/>
<input type="idcard"/>
<input placeholder="请输入用户名"/>
<input type="text" confirm-type="search"/>

<!--
  scroll-view组件：局部滚动
    * scroll-x          设置局部水平滚动
    * scroll-y          设置局部垂直滚动
    ------------
    * bindscroll        监听局部滚动的位置
    * bindscrolltoupper 监听滚动到顶部或者左侧
    * bindscrolltolower 监听滚动到底部或者右侧
  ......
-->
<scroll-view class="scroll1" scroll-x>
  <view wx:for="{{10}}" class="item1">哈哈哈</view>
</scroll-view>
<scroll-view class="scroll2" 
             scroll-y 
             bindscroll="getScroll"
             bindscrolltoupper="scrollToTop"
             bindscrolltolower="scrollToDown">
  <view wx:for="{{10}}" class="item2">嘿嘿嘿</view>
</scroll-view>

<!-- 
  组件的共同属性: 所有组件共有的一些属性
    * id              组件唯一的标识(不能重复)
    * class           组件的样式类
    * style           动态设置组件的内联样式
    * hidden          设置组件是否显示
    * bind../catch..  组件的事件
    * data-..         自定义属性,组件上触发的事件;
 -->

<!-- 
  open-data: 用于直接展示用户信息 
-->
<open-data type="userNickName"></open-data>





